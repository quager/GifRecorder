<Window
    x:Class="GifRecorder.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Closing="Frame_Closing" MouseDown="Frame_MouseDown" SizeChanged="OnSizeChanged" LocationChanged="OnLocationChanged"
    MinHeight="350" MinWidth="600" Width="948" Height="486" Topmost="True"
    BorderBrush="Red" BorderThickness="3" SnapsToDevicePixels="True"
    WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <Style x:Key="StopButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 3"/>
            <Setter Property="Width" Value="28"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                            <Rectangle Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Fill="{TemplateBinding Foreground}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="DimGray"/>
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RecordButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="#FFF08080"/>
            <Setter Property="Padding" Value="10 3"/>
            <Setter Property="Width" Value="28"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                            <Ellipse
                                Fill="{TemplateBinding Foreground}" Stroke="Black" StrokeThickness="0.5"
                                Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="DarkRed"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="DimGray"/>
                    <Setter Property="Foreground" Value="Silver" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RecordToggle" TargetType="ToggleButton">
            <Setter Property="Margin" Value="0 3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ToggleButton Style="{DynamicResource RecordButton}" IsChecked="{Binding Path=Recording}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Recording}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ToggleButton Style="{DynamicResource StopButton}" IsChecked="{Binding Path=Recording}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SideToggle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Content" Value="Move Left"/>
            <Setter Property="Padding" Value="8 2"/>
            <Setter Property="Margin" Value="2"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            CornerRadius="10"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="Move Right" />
                </Trigger>
                
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="DimGray"/>
                    <Setter Property="Foreground" Value="Silver" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#DFFF0000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 3"/>
            <Setter Property="Margin" Value="0 3"/>
            <Setter Property="Width" Value="28"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0 4 4 0">

                            <Path
                                Data="M4,1 L8,5 12,1 15,4 11,8 15,12 12,15 8,11 4,15 1,12 5,8 1,4 4,1"
                                Fill="{TemplateBinding Foreground}" Stroke="Black" StrokeThickness="0.5"
                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="DarkRed"/>
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.Background>
        <SolidColorBrush Color="White" Opacity="0"/>
    </Window.Background>

    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome
                        NonClientFrameEdges="None"
                        GlassFrameThickness="0"
                        ResizeBorderThickness="0,0,7,7"
                        CaptionHeight="7"
                        CornerRadius="0" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Column="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>

                            <Border
                                Grid.Column="{Binding SettingsColumn}"
                                CornerRadius="{Binding WindowCornerRadius}"
                                BorderBrush="Black" BorderThickness="1"
                                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">

                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Border x:Name="ControlPanel" CornerRadius="{Binding WindowCornerRadius}" Width="300">
        <StackPanel>
            <Border CornerRadius="{Binding HeaderCornerRadius}" BorderBrush="Black" BorderThickness="0 0 0 1">
                <Border.Background>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,.1">
                        <GradientStop Color="#FF327090" Offset=".5"/>
                        <GradientStop Color="#FF8AA4BD"/>
                    </LinearGradientBrush>
                </Border.Background>

                <Grid Margin="0 0 5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <ToggleButton Style="{DynamicResource SideToggle}" IsChecked="{Binding OnLeftSide}"/>
                    <ToggleButton Grid.Column="2" Style="{DynamicResource RecordToggle}"/>

                    <Button Grid.Column="3" Style="{DynamicResource CloseButton}" Click="OnClose"/>
                </Grid>
            </Border>

            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock Margin="4" Text="Set Frame Size:" VerticalAlignment="Center"/>
                
                <Button 
                    Grid.Column="1"
                    Margin="4"
                    Padding="5 0"
                    Content="HD"
                    ToolTip="Set HD size (1280X720)"
                    Click="SetHdSize"/>
                
                <Button 
                    Grid.Column="2"
                    Margin="4"
                    Padding="5 0"
                    Content="FullHD"
                    ToolTip="Set FullHD size (1920X1080)"
                    HorizontalAlignment="Left"
                    Click="SetFullHdSize"/>

                <TextBlock Grid.Row="1" Margin="4" Text="File path:" VerticalAlignment="Center"/>

                <Grid
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2">
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Margin="4 4 -1 4"
                        VerticalAlignment="Center"
                        Text="{Binding FilePath, UpdateSourceTrigger=PropertyChanged}"/>

                    <Button
                        Grid.Column="1"
                        Margin="0 4 4 4"
                        Padding="5 0"
                        Content="..."
                        Click="OnSelectFile"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"/>
                </Grid>
            </Grid>

            <Border Margin="5" Background="Black">
                <Image                   
                    Height="200"
                    Width="280"
                    Source="{Binding Frame, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>

            <Grid Margin="5 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Margin="0 5"
                    Text="{Binding Path=FramesRecorded, StringFormat=Frames: {0}}"/>
                
                <TextBlock
                    Grid.Column="1"
                    Margin="5"
                    HorizontalAlignment="Right"
                    Text="{Binding Path=RecordingTime, StringFormat=Time: {0}}"/>
                
                <TextBlock
                    Grid.Column="2"
                    Margin="5"
                    HorizontalAlignment="Right"
                    Text="{Binding Path=RecordedBytes, StringFormat=GIF Size: {0}}"/>
            </Grid>
        </StackPanel>
    </Border>
</Window>
